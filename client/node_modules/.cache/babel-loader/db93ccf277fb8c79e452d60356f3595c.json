{"ast":null,"code":"var _jsxFileName = \"/Users/saraalkhamri/spotify/client/src/Dashboard.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport useAuth from './useAuth';\nimport { useState } from 'react';\nimport { Container, Form } from 'react-bootstrap';\nimport SpotifyWebApi from \"spotify-web-api-node\";\nimport { access } from 'fs/promises';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst spotifyApi = new SpotifyWebApi({\n  clientId: \"40e8b276f23c4303abf74945b97b12f1\"\n});\nexport default function Dashboard(_ref) {\n  _s();\n\n  let {\n    code\n  } = _ref;\n  const accessToken = useAuth(code);\n  const [search, setSearch] = useState('');\n  useEffect(() => {\n    if (!accessToken) return;\n    spotifyApi.setAccessToken(accessToken);\n  }, [accessToken]);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"d-flex flex-column py-2\",\n    style: {\n      height: '100vh'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n      type: \"search\",\n      placeholder: \"Search Songs/Artists\",\n      value: search,\n      onChange: e => setSearch(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-grow-1 my-2\",\n      style: {\n        overflowY: \"auto\"\n      },\n      children: \"Songs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Bottom\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Dashboard, \"KWjuWx5PTppM9hW8mH6V4p7xWf0=\", false, function () {\n  return [useAuth];\n});\n\n_c = Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["/Users/saraalkhamri/spotify/client/src/Dashboard.js"],"names":["React","useAuth","useState","Container","Form","SpotifyWebApi","access","spotifyApi","clientId","Dashboard","code","accessToken","search","setSearch","useEffect","setAccessToken","height","e","target","value","overflowY"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,SAAT,EAAoBC,IAApB,QAAgC,iBAAhC;AACA,OAAOC,aAAP,MAA0B,sBAA1B;AACA,SAASC,MAAT,QAAuB,aAAvB;;AAEA,MAAMC,UAAU,GAAG,IAAIF,aAAJ,CAAkB;AACjCG,EAAAA,QAAQ,EAAE;AADuB,CAAlB,CAAnB;AAIA,eAAe,SAASC,SAAT,OAA6B;AAAA;;AAAA,MAAV;AAAEC,IAAAA;AAAF,GAAU;AACxC,QAAMC,WAAW,GAAGV,OAAO,CAACS,IAAD,CAA3B;AACA,QAAM,CAACE,MAAD,EAASC,SAAT,IAAsBX,QAAQ,CAAC,EAAD,CAApC;AAEAY,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAI,CAACH,WAAL,EAAkB;AAClBJ,IAAAA,UAAU,CAACQ,cAAX,CAA0BJ,WAA1B;AACH,GAHQ,EAGN,CAACA,WAAD,CAHM,CAAT;AAKA,sBACI,QAAC,SAAD;AAAW,IAAA,SAAS,EAAC,yBAArB;AAA+C,IAAA,KAAK,EAAE;AAAEK,MAAAA,MAAM,EAAE;AAAV,KAAtD;AAAA,4BACI,QAAC,IAAD,CAAM,OAAN;AAAc,MAAA,IAAI,EAAC,QAAnB;AAA4B,MAAA,WAAW,EAAC,sBAAxC;AAA+D,MAAA,KAAK,EAAEJ,MAAtE;AAA8E,MAAA,QAAQ,EAAEK,CAAC,IAAIJ,SAAS,CAACI,CAAC,CAACC,MAAF,CAASC,KAAV;AAAtG;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAkC,MAAA,KAAK,EAAE;AAAEC,QAAAA,SAAS,EAAE;AAAb,OAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AASH;;GAlBuBX,S;UACAR,O;;;KADAQ,S","sourcesContent":["import React from 'react'\nimport useAuth from './useAuth'\nimport { useState } from 'react'\nimport { Container, Form } from 'react-bootstrap'\nimport SpotifyWebApi from \"spotify-web-api-node\"\nimport { access } from 'fs/promises';\n\nconst spotifyApi = new SpotifyWebApi({\n    clientId: \"40e8b276f23c4303abf74945b97b12f1\",\n})\n\nexport default function Dashboard({ code }) {\n    const accessToken = useAuth(code)\n    const [search, setSearch] = useState('')\n\n    useEffect(() => {\n        if (!accessToken) return\n        spotifyApi.setAccessToken(accessToken)\n    }, [accessToken])\n\n    return (\n        <Container className=\"d-flex flex-column py-2\" style={{ height: '100vh' }}>\n            <Form.Control type='search' placeholder='Search Songs/Artists' value={search} onChange={e => setSearch(e.target.value)} />\n            <div className=\"flex-grow-1 my-2\" style={{ overflowY: \"auto\" }}>\n                Songs\n            </div>\n            <div>Bottom</div>\n        </Container>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}